* Note
+ As I am not provided with the written requirements from the engineering team. I only worked on the backend side for this assignment.
+ THe backend side has many issues which I tried to resolve.
* Code Autopsy
** JWT Generator Fxn
#+begin_src go
func generateJWTKey() {
	key := make([]byte, 32)
	_, err := rand.Read(key)
	if err != nil {
		log.Fatal("Error generating JWT key:", err)
	}
	jwtKey = key
}
#+end_src

** Initializing the Database
+ This fxn will initialize the db and store the local variable instance to the global instance
+ Ye koi table ni bana ke de rha mereko.
  #+begin_src go
func initDB() {
	err := godotenv.Load(".env")
	if err != nil {
		log.Fatal("Error loading .env file:", err)
	}

	dbUser := os.Getenv("DB_USER")
	dbPassword := os.Getenv("DB_PASSWORD")
	dbHost := os.Getenv("DB_HOST")
	dbPort := os.Getenv("DB_PORT")
	dbName := os.Getenv("DB_NAME")

	connectionString := fmt.Sprintf("%s:%s@tcp(%s:%s)/%s", dbUser, dbPassword, dbHost, dbPort, dbName)
	db, err = sql.Open("mysql", connectionString)
	if err != nil {
		log.Fatal("Error opening database:", err)
	}

	err = db.Ping()
	if err != nil {
		log.Fatal("Error pinging database:", err)
	}
	fmt.Println("Database connection successful")
}

  #+end_src

* Problems in Backend
+ Postman shows that the error when I do the POST request to "/admin"

  #+begin_src text
Error creating admin: Error 1146 (42S02): Table 'courseconnect.admins' doesn't exist
  #+end_src

+ The "Login" handle is returning the "JWT" as it is. IDK WHy its returning it. It should store the JWT in cookies at frontend side for user.
  
+ I added new Handler "UserShow()" Which displays the username, email id of the user. Use postman regarding it.
